{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430/react_test/lk-fi-website/src/pages/award.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport list_awards from \"./awards.json\";\nimport { Camp } from \"./components/AchivmentsCpm/Camp\";\nimport { Events } from \"./components/AchivmentsCpm/Events\";\nimport { FullGradde } from \"./components/AchivmentsCpm/FullGrade\";\nimport { Training } from \"./components/AchivmentsCpm/Training\";\nimport { SiteFooter } from \"./components/footer\";\nimport { SiteHeader } from \"./components/header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const award = ({\n  name_id\n}) => {\n  _s();\n\n  const [player, setPlayer] = React.useState([]);\n  const [showInformation, setShowInformation] = useState(false);\n  React.useEffect(() => {\n    const fetchStat = async () => {\n      const res = await axios.get('https://cdn.lk-ft.ru/players');\n      setPlayer(res.data);\n    };\n\n    fetchStat();\n  }, []);\n  var twoVSTwo = [];\n  var two = 0,\n      tre = 0,\n      penal = 0;\n  var threeVsThree = [];\n  var penalty = [];\n  player.map((e, i) => {\n    if (e.fullname == name_id) {\n      if (e.last_statements == \"2 VS 2\") {\n        twoVSTwo.push({\n          date: e.age,\n          zabito: e.phone,\n          propush: e.insta,\n          mark: e.adresse\n        });\n        two += Number(e.adresse);\n      }\n\n      if (e.last_statements == '3 VS 3') {\n        threeVsThree.push({\n          date: e.age,\n          zabito: e.phone,\n          propush: e.insta,\n          mark: e.adresse\n        });\n        tre += Number(e.adresse);\n      }\n\n      if (e.last_statements == \"Пенальти\") {\n        penalty.push({\n          date: e.age,\n          zabito: e.phone,\n          propush: e.insta,\n          mark: e.adresse\n        });\n        penal += Number(e.adresse);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SiteHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"award-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"tournament-content\",\n          children: [/*#__PURE__*/_jsxDEV(Training, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Camp, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Events, {\n            dva: twoVSTwo,\n            tre: threeVsThree,\n            penal: penalty\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FullGradde, {\n            two: two,\n            tre: tre,\n            penal: penal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SiteFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(award, \"tyk1LNfmsFIPaDlJGTCuSVl8nYI=\");\n\nconst Awards_Component = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"award-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"award-thumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"thumb\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: e.img,\n            alt: \"award\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"cont\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), e.count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"award-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"title\",\n          children: e.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: e.post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }, this))\n  }, void 0, false);\n};\n\n_c = Awards_Component;\n\nconst Pagination = ({\n  awardPerPage,\n  totalAwards,\n  paginate\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalAwards / awardPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(number),\n          href: \"#0\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Pagination;\nexport default function Pagination_Award() {\n  _s2();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [awardPerPage] = useState(3); //get current award\n\n  const indexOfLastAward = currentPage * awardPerPage;\n  const indexOfFirstAward = indexOfLastAward - awardPerPage;\n  const currentAward = list_awards.player_award.slice(indexOfFirstAward, indexOfLastAward); // Change Page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      awardPerPage: awardPerPage,\n      totalAwards: list_awards.player_award.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Awards_Component, {\n      posts: currentAward\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      awardPerPage: awardPerPage,\n      totalAwards: list_awards.player_award.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Pagination_Award, \"Zi+c55D/QvJzfU1yw8uD2igrPgw=\");\n\n_c3 = Pagination_Award;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Awards_Component\");\n$RefreshReg$(_c2, \"Pagination\");\n$RefreshReg$(_c3, \"Pagination_Award\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Работа/react_test/lk-fi-website/src/pages/award.js"],"names":["React","useState","axios","list_awards","Camp","Events","FullGradde","Training","SiteFooter","SiteHeader","award","name_id","player","setPlayer","showInformation","setShowInformation","useEffect","fetchStat","res","get","data","twoVSTwo","two","tre","penal","threeVsThree","penalty","map","e","i","fullname","last_statements","push","date","age","zabito","phone","propush","insta","mark","adresse","Number","Awards_Component","posts","img","count","name","post","Pagination","awardPerPage","totalAwards","paginate","pageNumbers","Math","ceil","number","Pagination_Award","currentPage","setCurrentPage","indexOfLastAward","indexOfFirstAward","currentAward","player_award","slice","pageNumber","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport list_awards from \"./awards.json\";\r\nimport { Camp } from \"./components/AchivmentsCpm/Camp\";\r\nimport { Events } from \"./components/AchivmentsCpm/Events\";\r\nimport { FullGradde } from \"./components/AchivmentsCpm/FullGrade\";\r\nimport { Training } from \"./components/AchivmentsCpm/Training\";\r\nimport { SiteFooter } from \"./components/footer\";\r\nimport { SiteHeader } from \"./components/header\";\r\n\r\n\r\nexport const award = ({ name_id }) => {\r\n\r\n    const [player, setPlayer] = React.useState([]);\r\n    const [showInformation, setShowInformation] = useState(false);\r\n    React.useEffect(() => {\r\n        const fetchStat = async () => {\r\n            const res = await axios.get('https://cdn.lk-ft.ru/players');\r\n            setPlayer(res.data)\r\n        }\r\n\r\n        fetchStat();\r\n    }, []);\r\n\r\n    var twoVSTwo = [];\r\n    var two = 0, tre = 0, penal = 0;\r\n    var threeVsThree = [];\r\n    var penalty = [];\r\n\r\n    player.map((e, i) => {\r\n        if (e.fullname == name_id) {\r\n            if (e.last_statements == \"2 VS 2\") {\r\n                twoVSTwo.push({ date: e.age, zabito: e.phone, propush: e.insta, mark: e.adresse })\r\n                two += Number(e.adresse);\r\n            }\r\n            if (e.last_statements == '3 VS 3') {\r\n                threeVsThree.push({ date: e.age, zabito: e.phone, propush: e.insta, mark: e.adresse })\r\n                tre += Number(e.adresse)\r\n            }\r\n            if (e.last_statements == \"Пенальти\") {\r\n                penalty.push({ date: e.age, zabito: e.phone, propush: e.insta, mark: e.adresse })\r\n                penal += Number(e.adresse)\r\n            }\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <SiteHeader />\r\n            <body>\r\n                <div class=\"award-container\">\r\n                    <div class=\"tournament-content\">\r\n                        <Training />\r\n                        <Camp />\r\n                        <Events dva={twoVSTwo} tre={threeVsThree} penal={penalty} />\r\n                        <FullGradde two={two} tre={tre} penal={penal} />\r\n                    </div>\r\n                </div>\r\n            </body>\r\n            <SiteFooter />\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst Awards_Component = ({ posts }) => {\r\n    return (\r\n        <>\r\n            {\r\n                posts.map((e, i) => <div key={i} class=\"award-item\">\r\n                    <div class=\"award-thumb\">\r\n                        <div class=\"thumb\">\r\n                            <img src={e.img} alt=\"award\" />\r\n                        </div>\r\n                        <div class=\"cont\">\r\n                            <span>x</span>{e.count}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"award-content\">\r\n                        <h4 class=\"title\">{e.name}</h4>\r\n                        <p>{e.post}</p>\r\n                    </div>\r\n                </div>)\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nconst Pagination = ({ awardPerPage, totalAwards, paginate }) => {\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalAwards / awardPerPage); i++) {\r\n        pageNumbers.push(i);\r\n\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <ul class=\"pagination\">\r\n                {pageNumbers.map(number =>\r\n\r\n                    <li key={number}  >\r\n                        <a onClick={() => paginate(number)} href=\"#0\" >{number}</a>\r\n                    </li>\r\n\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default function Pagination_Award() {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [awardPerPage] = useState(3);\r\n\r\n    //get current award\r\n    const indexOfLastAward = currentPage * awardPerPage;\r\n    const indexOfFirstAward = indexOfLastAward - awardPerPage;\r\n    const currentAward = list_awards.player_award.slice(indexOfFirstAward, indexOfLastAward);\r\n\r\n    // Change Page\r\n\r\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n    return (\r\n        <>\r\n            <Pagination awardPerPage={awardPerPage} totalAwards={list_awards.player_award.length} paginate={paginate} />\r\n            <Awards_Component posts={currentAward} />\r\n            <Pagination awardPerPage={awardPerPage} totalAwards={list_awards.player_award.length} paginate={paginate} />\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}