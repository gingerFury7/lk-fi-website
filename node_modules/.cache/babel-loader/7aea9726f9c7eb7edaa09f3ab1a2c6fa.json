{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lonokill\\\\Desktop\\\\react app\\\\my-app\\\\src\\\\pages\\\\components\\\\testComm\\\\carousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Carousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CarouselItem = ({\n  children,\n  width\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-item\",\n    style: {\n      width: width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = CarouselItem;\n\nconst Carousel = ({\n  children\n}) => {\n  _s();\n\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [paused, setPaused] = useState(false);\n\n  const updateIndex = newIndex => {\n    if (newIndex < 0) {\n      newIndex = React.Children.count(children) - 1;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = 0;\n    }\n\n    setActiveIndex(newIndex);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!paused) {\n        updateIndex(activeIndex + 1);\n      }\n    }, 3000);\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    onMouseEnter: () => setPaused(true),\n    onMouseLeave: () => setPaused(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 100}%)`\n      },\n      children: React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"100%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex - 1);\n        },\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${index === activeIndex ? \"active\" : \"\"}`,\n          onClick: () => {\n            updateIndex(index);\n          },\n          children: index + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          updateIndex(activeIndex + 1);\n        },\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Carousel, \"K0leew7kIfEIM73GcbgQUKHNMMk=\");\n\n_c2 = Carousel;\nexport default Carousel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarouselItem\");\n$RefreshReg$(_c2, \"Carousel\");","map":{"version":3,"sources":["C:/Users/Lonokill/Desktop/react app/my-app/src/pages/components/testComm/carousel.js"],"names":["React","useEffect","useState","CarouselItem","children","width","Carousel","activeIndex","setActiveIndex","paused","setPaused","updateIndex","newIndex","Children","count","interval","setInterval","clearInterval","transform","map","child","index","cloneElement"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport \"./Carousel.css\";\r\n\r\nexport const CarouselItem = ({ children, width }) => {\r\n  return (\r\n    <div className=\"carousel-item\" style={{ width: width }}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Carousel = ({ children }) => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [paused, setPaused] = useState(false);\r\n\r\n  const updateIndex = (newIndex) => {\r\n    if (newIndex < 0) {\r\n      newIndex = React.Children.count(children) - 1;\r\n    } else if (newIndex >= React.Children.count(children)) {\r\n      newIndex = 0;\r\n    }\r\n\r\n    setActiveIndex(newIndex);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!paused) {\r\n        updateIndex(activeIndex + 1);\r\n      }\r\n    }, 3000);\r\n\r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  });\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"carousel\"\r\n      onMouseEnter={() => setPaused(true)}\r\n      onMouseLeave={() => setPaused(false)}\r\n    >\r\n      <div\r\n        className=\"inner\"\r\n        style={{ transform: `translateX(-${activeIndex * 100}%)` }}\r\n      >\r\n        {React.Children.map(children, (child, index) => {\r\n          return React.cloneElement(child, { width: \"100%\" });\r\n        })}\r\n      </div>\r\n      <div className=\"indicators\">\r\n        <button\r\n          onClick={() => {\r\n            updateIndex(activeIndex - 1);\r\n          }}\r\n        >\r\n          Prev\r\n        </button>\r\n        {React.Children.map(children, (child, index) => {\r\n          return (\r\n            <button\r\n              className={`${index === activeIndex ? \"active\" : \"\"}`}\r\n              onClick={() => {\r\n                updateIndex(index);\r\n              }}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          );\r\n        })}\r\n        <button\r\n          onClick={() => {\r\n            updateIndex(activeIndex + 1);\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"]},"metadata":{},"sourceType":"module"}