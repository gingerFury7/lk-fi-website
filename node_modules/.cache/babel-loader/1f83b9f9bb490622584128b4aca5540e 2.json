{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430/react_test/lk-fi-website/src/pages/Stats.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { useStatistics } from \"./components/hooks/useStat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Stats = ({\n  stats\n}) => {\n  _s();\n\n  const {\n    get,\n    set\n  } = useStatistics();\n  const [show, setShow] = useState(false);\n  React.useEffect(() => {\n    if (typeof stats == \"object\" && typeof stats[0] != \"number\") {\n      set(stats);\n    }\n\n    return () => {};\n  }, [stats]);\n\n  if (show) {\n    var _get, _get2;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-header-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"title\",\n          onClick: () => setShow(false),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"text-theme-show\",\n            children: \"\\u041C\\u043E\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/client/down-arrow.svg\",\n            alt: \"right-arrow\",\n            className: \"client-menu-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            className: \"mt-4\",\n            width: \"450px\",\n            height: \"250px\",\n            chartType: \"LineChart\",\n            data: [[{\n              type: \"date\",\n              label: \"Дата\",\n              id: \"Date\"\n            }, {\n              type: \"number\",\n              label: \"Удар\",\n              id: \"Won/Loss\"\n            }], ...((_get = get()) === null || _get === void 0 ? void 0 : _get.ReactionList)].concat(((_get2 = get()) === null || _get2 === void 0 ? void 0 : _get2.HitList) || []),\n            options: {\n              chart: {\n                subtitle: \"Оценка\"\n              },\n              intervals: {\n                color: \"#ffffff\"\n              }\n            },\n            rootProps: {\n              \"data-testid\": \"2\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section-header-2\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"title\",\n          onClick: () => setShow(true),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"text-theme\",\n            children: \"\\u041C\\u043E\\u044F \\u0441\\u0442\\u0430\\u0442\\u0438\\u0441\\u0442\\u0438\\u043A\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/images/client/right-arrow.svg\",\n            alt: \"right-arrow\",\n            className: \"client-menu-arrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Stats, \"hoWrn+Jy6Vzbsd1vS9KlxGpwkz0=\", false, function () {\n  return [useStatistics];\n});\n\n_c = Stats;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Работа/react_test/lk-fi-website/src/pages/Stats.js"],"names":["React","useState","Chart","useStatistics","Stats","stats","get","set","show","setShow","useEffect","type","label","id","ReactionList","concat","HitList","chart","subtitle","intervals","color","cursor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { useStatistics } from \"./components/hooks/useStat\";\r\n\r\nexport const Stats = ({ stats }) => {\r\n    const { get, set } = useStatistics();\r\n    const [show, setShow] = useState(false);\r\n\r\n    React.useEffect(() => {\r\n        if (typeof stats == \"object\" && typeof stats[0] != \"number\") {\r\n            set(stats);\r\n        }\r\n        return () => { };\r\n    }, [stats]);\r\n    if (show) {\r\n        return (\r\n            <div className=\"container\">\r\n                <section className=\"section-header-2\">\r\n                    <h2 class=\"title\" onClick={() => setShow(false)}>\r\n                        <span class=\"text-theme-show\">Моя статистика</span>\r\n                        <img src=\"/images/client/down-arrow.svg\" alt=\"right-arrow\" className=\"client-menu-arrow\"></img>\r\n                    </h2>\r\n                    <div>\r\n                        <Chart\r\n                            className=\"mt-4\"\r\n                            width={\"450px\"}\r\n                            height={\"250px\"}\r\n                            chartType=\"LineChart\"\r\n                            data={[\r\n                                [\r\n                                    { type: \"date\", label: \"Дата\", id: \"Date\" },\r\n                                    { type: \"number\", label: \"Удар\", id: \"Won/Loss\" },\r\n                                ],\r\n                                  ...get()?.ReactionList\r\n                            ].concat(get()?.HitList || [])}\r\n                            options={{\r\n                                chart: {\r\n                                    subtitle: \"Оценка\",\r\n                                },\r\n                                intervals: { color: \"#ffffff\" },\r\n                            }}\r\n                            rootProps={{ \"data-testid\": \"2\" }}\r\n                        />\r\n                    </div>\r\n                    {/* <ul className=\"stats-\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-around\",\r\n                            alignItems: \"center\",\r\n                            flexWrap: \"wrap\",\r\n                        }}\r\n                    >\r\n                        <div className=\"title-chart\">\r\n                            <span\r\n                                class=\"text-theme\"\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    marginTop: \"-4px\",\r\n                                    color: \"#25BA00\",\r\n                                    marginLeft: \"64px\",\r\n                                }}\r\n                            >\r\n                                Удар\r\n                            </span>\r\n                            <Chart\r\n                                className=\"mt-4\"\r\n                                width={\"500px\"}\r\n                                height={\"350px\"}\r\n                                chartType=\"LineChart\"\r\n                                data={[\r\n                                    [\r\n                                        { type: \"date\", label: \"Дата\", id: \"Date\" },\r\n                                        { type: \"number\", label: \"Удар\", id: \"Won/Loss\" },\r\n                                    ],\r\n                                    //   ...get()?.ReactionList\r\n                                ].concat(get()?.HitList || [])}\r\n                                options={{\r\n                                    chart: {\r\n                                        subtitle: \"Оценка\",\r\n                                    },\r\n                                    intervals: { color: \"#ffffff\" },\r\n                                }}\r\n                                rootProps={{ \"data-testid\": \"2\" }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"title-chart\">\r\n                            <span\r\n                                class=\"text-theme\"\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    marginTop: \"-4px\",\r\n                                    color: \"#25BA00\",\r\n                                    marginLeft: \"64px\",\r\n                                }}\r\n                            >\r\n                                Скорость\r\n                            </span>\r\n                            <Chart\r\n                                className=\"mt-4\"\r\n                                width={\"500px\"}\r\n                                height={\"350px\"}\r\n                                chartType=\"LineChart\"\r\n                                data={[\r\n                                    [\r\n                                        { type: \"date\", label: \"Дата\", id: \"Date\" },\r\n                                        { type: \"number\", label: \"Скорость\", id: \"Won/Loss\" },\r\n                                    ],\r\n                                    //   ...get()?.ReactionList\r\n                                ].concat(get()?.SpeedList || [])}\r\n                                options={{\r\n                                    chart: {\r\n                                        subtitle: \"Оценка\",\r\n                                        chartArea: { width: \"50%\" },\r\n                                        colors: [\"#ffab91\"],\r\n                                    },\r\n                                }}\r\n                                rootProps={{ \"data-testid\": \"2\" }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"title-chart\">\r\n                            <span\r\n                                class=\"text-theme\"\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    marginTop: \"-4px\",\r\n                                    color: \"#25BA00\",\r\n                                    marginLeft: \"64px\",\r\n                                }}\r\n                            >\r\n                                Прыжок\r\n                            </span>\r\n                            <Chart\r\n                                className=\"mt-4\"\r\n                                width={\"500px\"}\r\n                                height={\"350px\"}\r\n                                chartType=\"LineChart\"\r\n                                data={[\r\n                                    [\r\n                                        { type: \"date\", label: \"Дата\", id: \"Date\" },\r\n                                        { type: \"number\", label: \"Прыжок\", id: \"Won/Loss\" },\r\n                                    ],\r\n                                    //   ...get()?.ReactionList\r\n                                ].concat(get()?.JumpList || [])}\r\n                                options={{\r\n                                    chart: {\r\n                                        subtitle: \"Оценка\",\r\n                                        chartArea: { width: \"50%\" },\r\n                                    },\r\n                                }}\r\n                                rootProps={{ \"data-testid\": \"2\" }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"title-chart\">\r\n                            <span\r\n                                class=\"text-theme\"\r\n                                style={{\r\n                                    position: \"absolute\",\r\n                                    marginTop: \"-4px\",\r\n                                    color: \"#25BA00\",\r\n                                    marginLeft: \"64px\",\r\n                                }}\r\n                            >\r\n                                Реакция\r\n                            </span>\r\n                            <Chart\r\n                                className=\"mt-4\"\r\n                                width={\"500px\"}\r\n                                height={\"350px\"}\r\n                                chartType=\"LineChart\"\r\n                                data={[\r\n                                    [\r\n                                        { type: \"date\", label: \"Дата\", id: \"Date\" },\r\n                                        { type: \"number\", label: \"Реакция\", id: \"Won/Loss\" },\r\n                                    ],\r\n                                    //   ...get()?.ReactionList\r\n                                ].concat(get()?.ReactionList || [])}\r\n                                options={{\r\n                                    chart: {\r\n                                        subtitle: \"Оценка\",\r\n                                        chartArea: { width: \"50%\" },\r\n                                    },\r\n                                }}\r\n                                rootProps={{ \"data-testid\": \"2\" }}\r\n                            />\r\n                        </div>\r\n                    </ul> */}\r\n                </section>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className=\"container\">\r\n                <section className=\"section-header-2\">\r\n                    <h2 class=\"title\" onClick={() => setShow(true)} style={{ cursor: \"pointer\" }}>\r\n                        <span class=\"text-theme\">Моя статистика</span>\r\n                        <img src=\"/images/client/right-arrow.svg\" alt=\"right-arrow\" className=\"client-menu-arrow\"></img>\r\n                    </h2>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}