{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lonokill\\\\Desktop\\\\react app\\\\my-app\\\\src\\\\pages\\\\components\\\\testComm\\\\coments.js\";\nimport React, { Component } from 'react';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Test_Comen = () => {\n  state = {\n    comments: [],\n    form: {\n      name: '',\n      comment: ''\n    }\n  };\n\n  componentDidMount = () => {\n    if (localStorage.getItem('state')) {\n      this.setState({ ...JSON.parse(localStorage.getItem('state'))\n      });\n    }\n  };\n\n  addComment = () => {\n    this.setState({\n      comments: [...this.state.comments, {\n        id: this.state.comments.length ? this.state.comments.reduce((p, c) => p.id > c.id ? p : c).id + 1 : 1,\n        // max id +1\n        name: this.state.form.name,\n        comment: this.state.form.comment,\n        date: new Date()\n      }],\n      form: {\n        name: '',\n        comment: ''\n      }\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  };\n\n  removeComment = id => {\n    this.setState({\n      comments: this.state.comments.filter(comment => comment.id !== id)\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)));\n  };\n\n  handleChange = e => {\n    console.log(e.target.name);\n    this.setState({\n      form: { ...this.state.form,\n        [e.target.name]: e.target.value\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontStyle: 'italic'\n          },\n          children: [comment.id, \" - \", format(comment.date, 'DD/MM/YYYY'), \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [comment.name, \", \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.removeComment.bind(null, comment.id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 45\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u043C\\u044F: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: this.state.form.name,\n            name: \"name\",\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439: \", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"comment\",\n            value: this.state.form.comment,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addComment,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n_c = Test_Comen;\nexport default Test_Comen;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test_Comen\");","map":{"version":3,"sources":["C:/Users/Lonokill/Desktop/react app/my-app/src/pages/components/testComm/coments.js"],"names":["React","Component","format","Test_Comen","state","comments","form","name","comment","componentDidMount","localStorage","getItem","setState","JSON","parse","addComment","id","length","reduce","p","c","date","Date","setItem","stringify","removeComment","filter","handleChange","e","console","log","target","value","map","fontStyle","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { format } from 'date-fns'\r\n\r\nexport const Test_Comen=()=> {\r\n  state = {\r\n    comments: [],\r\n    form: {\r\n      name: '',\r\n      comment: ''\r\n    }\r\n  }\r\n  componentDidMount =()=> {\r\n    if (localStorage.getItem('state')) {\r\n      this.setState({ ...JSON.parse(localStorage.getItem('state')) })\r\n    }\r\n  }\r\n  addComment = () => {\r\n    this.setState({\r\n      comments: [\r\n        ...this.state.comments,\r\n        {\r\n          id: this.state.comments.length ? this.state.comments.reduce((p, c) => p.id > c.id ? p : c).id + 1 : 1, // max id +1\r\n          name: this.state.form.name,\r\n          comment: this.state.form.comment,\r\n          date: new Date()\r\n        }\r\n      ],\r\n      form: {\r\n        name: '',\r\n        comment: ''\r\n      }\r\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)))\r\n  }\r\n  removeComment = (id) => {\r\n    this.setState({\r\n      comments: this.state.comments.filter(comment => comment.id !== id)\r\n    }, () => localStorage.setItem('state', JSON.stringify(this.state)))\r\n  }\r\n  handleChange = (e) => {\r\n    console.log(e.target.name)\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      }\r\n    })\r\n  }\r\n  \r\n    return (\r\n      <Fragment>\r\n      <div className=\"App\">\r\n        {this.state.comments.map(comment => <div key={comment.id}>\r\n          <span style={{ fontStyle: 'italic' }}>{comment.id} - {format(comment.date, 'DD/MM/YYYY')}: </span>\r\n          <strong>{comment.name}, </strong>\r\n          <span>{comment.comment}</span>\r\n          <button onClick={this.removeComment.bind(null, comment.id)}>Удалить комментарий</button>\r\n        </div>)}\r\n      <div>\r\n          <label>Имя: <input\r\n            type=\"text\"\r\n            value={this.state.form.name}\r\n            name=\"name\"\r\n            onChange={this.handleChange} /></label>\r\n          <label>Комментарий: <textarea\r\n            name=\"comment\"\r\n            value={this.state.form.comment}\r\n            onChange={this.handleChange}></textarea>\r\n          </label>\r\n          <button onClick={this.addComment}>Добавить комментарий</button>\r\n        </div>\r\n      </div>\r\n      </Fragment>\r\n    )\r\n  \r\n}\r\n\r\n \r\n\r\nexport default Test_Comen\r\n"]},"metadata":{},"sourceType":"module"}